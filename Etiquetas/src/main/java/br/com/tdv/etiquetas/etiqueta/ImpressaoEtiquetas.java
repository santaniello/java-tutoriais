package br.com.tdv.etiquetas.etiqueta;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;

import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.event.PrintJobAdapter;
import javax.print.event.PrintJobEvent;

/**
 * @author Felipe Santaniello
 * @data 13s/01/2016
 * @description Classe criada para trabalhar com a impressão de etiquetas.
 *
 */
public class ImpressaoEtiquetas {

	public static final String PATH_ETIQUETA = "c:\\etiqueta.prn";
	
	// Cabeçalho
	public static final String CABECALHO_BINARIO_LINHA1 = "2;113;67;2;110;";
	public static final String CABECALHO_BINARIO_LINHA2 = "2;77;48;54;52;49;";
	public static final String CABECALHO_BINARIO_LINHA3 = "2;79;48;50;50;48;";
	public static final String CABECALHO_BINARIO_LINHA4 = "2;86;48;";
	public static final String CABECALHO_BINARIO_LINHA5 = "2;83;67;";
	public static final String CABECALHO_BINARIO_LINHA6 = "1;68;";
	public static final String CABECALHO_BINARIO_LINHA7 = "0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;73;67;80;103;102;120;48;";
	public static final String CABECALHO_BINARIO_LINHA8 = "5;1;1;0;0;0;0;238;0;70;0;44;1;44;1;0;0;0;255;255;255;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;30;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;198;255;193;199;207;255;30;199;255;198;255;193;247;207;255;193;248;127;198;255;198;255;188;127;207;255;135;198;255;198;255;60;103;207;255;193;206;61;197;255;198;255;63;135;207;255;193;254;0;197;255;198;255;191;135;208;255;193;192;31;196;255;199;255;140;208;255;193;231;12;127;195;255;199;255;128;208;255;193;254;0;63;195;255;198;255;127;193;192;209;255;0;7;195;255;198;255;63;193;225;209;255;193;225;134;63;194;255;198;255;127;193;192;127;208;255;193;240;0;31;194;255;199;255;193;192;127;208;255;193;252;0;3;194;255;197;255;193;249;193;255;140;127;193;255;193;252;119;193;199;194;255;193;199;193;252;127;193;255;193;252;127;196;255;193;252;48;193;195;63;193;255;197;255;193;249;193;255;128;127;193;255;193;252;15;135;194;255;193;192;193;248;63;193;255;193;248;127;196;255;193;254;194;0;31;193;255;199;255;128;127;193;255;193;252;14;15;194;255;129;193;240;63;193;255;193;240;127;197;255;128;0;7;193;255;198;255;193;252;193;225;194;255;193;241;142;31;194;255;24;193;225;159;193;255;193;225;198;255;134;24;99;193;255;197;255;193;239;193;252;1;194;255;193;240;28;31;194;255;1;193;193;194;255;193;225;198;255;193;192;0;1;193;255;198;255;193;254;0;194;255;193;248;56;31;194;255;131;128;194;255;193;192;198;255;193;224;194;0;127;198;255;193;247;12;193;249;193;199;193;252;112;193;207;156;127;193;199;140;193;241;193;207;140;193;241;193;199;193;254;113;194;255;193;240;193;195;12;127;198;255;193;224;3;193;240;7;193;224;112;62;0;127;135;11;96;15;131;193;225;131;193;252;0;194;255;193;240;194;0;63;198;255;193;224;7;193;192;1;193;224;193;240;120;0;63;6;7;0;15;3;128;1;193;240;0;127;193;255;193;240;194;0;7;196;255;193;251;193;255;24;103;135;25;193;225;193;198;56;97;158;24;103;142;30;99;134;24;193;225;193;198;63;193;255;193;230;24;97;135;196;255;193;243;193;255;0;31;7;1;193;193;193;192;124;193;240;62;4;8;12;30;3;135;1;193;193;193;192;127;193;255;193;240;194;0;7;197;255;193;248;0;62;7;194;131;193;224;193;255;128;126;0;24;60;14;15;3;131;129;193;224;194;255;193;240;194;0;1;196;255;159;193;240;193;195;60;48;193;199;15;193;241;193;231;12;125;193;195;28;120;193;207;30;51;193;199;12;49;194;255;193;240;193;195;12;49;196;255;159;193;224;3;193;252;0;135;15;129;193;224;0;124;0;56;120;14;30;15;135;0;33;194;255;193;224;194;0;1;195;255;193;254;193;255;0;15;193;248;15;62;7;135;128;193;193;193;254;0;193;224;120;56;28;14;6;3;193;207;194;255;193;192;194;0;1;195;255;193;248;193;243;134;63;193;241;143;60;99;135;25;193;225;193;254;24;193;225;193;238;56;121;142;28;99;193;207;194;255;134;24;97;135;195;255;193;253;193;224;4;63;193;240;30;60;195;7;193;195;193;252;1;193;225;193;192;112;120;14;28;7;143;194;255;128;194;0;1;196;255;0;3;193;255;193;248;56;28;30;14;7;3;193;248;3;193;192;96;193;240;56;24;30;14;7;194;255;195;0;1;194;255;193;249;193;231;12;123;193;255;193;252;48;193;247;28;60;193;195;15;193;240;193;199;140;49;193;227;60;48;193;223;12;63;193;255;193;254;48;193;195;12;49;194;255;193;249;193;192;0;127;193;255;193;248;0;193;248;28;12;0;15;193;240;7;193;192;1;193;224;120;0;126;0;63;193;255;193;254;195;0;1;194;255;193;228;0;3;194;255;193;240;0;120;60;14;0;7;193;240;15;193;224;7;193;224;193;240;0;124;0;31;193;255;193;252;195;0;7;193;255;193;243;134;24;193;243;194;255;193;243;135;120;115;142;24;103;193;206;63;193;225;143;184;193;225;134;124;193;225;159;193;255;193;241;134;24;97;135;193;255;193;243;143;61;196;255;193;223;193;253;194;255;63;194;255;127;193;247;193;223;193;253;193;225;194;255;193;247;194;255;193;224;195;0;15;211;255;193;192;197;255;193;192;195;0;15;211;255;140;197;255;12;48;193;195;12;63;211;255;131;196;255;193;254;196;0;127;211;255;131;196;255;193;248;196;0;127;211;255;193;227;196;255;56;97;134;24;99;193;255;216;255;196;0;3;193;255;215;255;193;252;196;0;15;193;255;215;255;193;240;193;195;12;48;193;195;31;193;255;215;255;96;195;0;2;191;193;255;214;255;193;254;196;0;3;194;255;214;255;193;225;134;24;97;134;31;194;255;213;255;193;252;193;192;196;0;63;194;255;213;255;193;248;196;0;1;195;255;213;255;193;195;12;48;193;195;12;51;195;255;212;255;193;249;128;196;0;127;195;255;212;255;193;192;196;0;3;196;255;211;255;193;243;134;24;97;134;24;119;196;255;211;255;193;224;196;0;16;197;255;210;255;193;254;197;0;127;197;255;209;255;193;249;193;195;12;48;193;195;12;49;198;255;209;255;193;240;128;196;0;63;198;255;209;255;128;196;0;3;199;255;207;255;193;252;193;225;134;24;97;134;24;193;243;199;255;207;255;193;240;197;0;21;200;255;206;255;193;253;128;196;0;1;201;255;205;255;156;112;193;195;12;48;193;195;12;121;201;255;205;255;8;196;0;2;15;202;255;204;255;48;198;0;203;255;201;255;193;252;193;243;134;24;97;134;24;97;142;61;203;255;201;255;124;193;193;197;0;67;193;223;204;255;200;255;193;248;198;0;3;206;255;197;255;193;251;193;231;156;112;193;195;12;48;193;195;12;113;193;231;206;255;196;255;193;254;193;249;130;8;196;0;130;30;208;255;195;255;193;253;193;224;199;0;63;209;255;124;193;243;142;24;97;4;24;97;134;24;193;227;143;63;209;255;60;193;227;4;16;65;4;48;193;227;193;207;125;212;255;";
	public static final String CABECALHO_BINARIO_LINHA9 = "2;76;";
	public static final String CABECALHO_BINARIO_LINHA10 = "68;49;49;";
	public static final String CABECALHO_BINARIO_LINHA11 = "80;67;";
	public static final String CABECALHO_BINARIO_LINHA12 = "83;67;";
	
	// Conteudo
	public static final String CONTEUDO_BINARIO_LINHA13_CODIGOBARRA = "49;101;52;50;48;52;54;48;48;50;49;48;48;57;48;67;%CodigoBarra%";
	public static final String CONTEUDO_BINARIO_LINHA14_DESCRICAOCODIGOBARRA = "49;57;49;49;48;48;50;48;48;48;55;48;48;55;51;%ValorCodigoBarra%";
	public static final String CONTEUDO_BINARIO_LINHA15_CODIGOBARRA = "52;101;52;50;48;51;53;48;48;49;52;48;48;52;54;67;%CodigoBarra%";
	public static final String CONTEUDO_BINARIO_LINHA16_CODIGOBARRA = "52;101;52;50;48;51;53;48;48;49;52;48;51;56;52;67;%CodigoBarra%";
	public static final String CONTEUDO_BINARIO_LINHA17_CNPJ = "49;57;49;49;48;48;52;48;49;53;54;48;49;%CNPJ%"; 
	public static final String CONTEUDO_BINARIO_LINHA17_CNPJ_MARGEM = "15"; 
	public static final String CONTEUDO_BINARIO_LINHA18ARMAZEM = "49;57;49;49;48;48;52;48;49;51;54;48;49;50;53;%Armazem%";
	public static final String CONTEUDO_BINARIO_LINHA19EMBALAGEMPO = "49;57;49;49;48;48;51;48;49;49;57;48;48;57;48;%EmbalagemPO%";
	public static final String CONTEUDO_BINARIO_LINHA20PESO = "49;57;49;49;48;48;51;48;49;48;51;48;49;54;53;%Peso%";
	public static final String CONTEUDO_BINARIO_LINHA21_REMETENTE = "49;57;49;49;48;48;51;48;48;54;56;48;48;57;48;%Remetente%";
	public static final String CONTEUDO_BINARIO_LINHA22USUARIO = "49;57;49;49;48;48;51;48;48;56;52;48;48;57;48;%Usuario%";
	public static final String CONTEUDO_BINARIO_LINHA23CODIGOBARRA = "49;87;99;51;51;48;48;48;48;49;51;53;48;50;57;%CodigoBarra%";		
	public static final String CONTEUDO_BINARIO_LINHA24NF = "49;57;49;49;48;48;54;48;49;55;56;48;48;57;48;%NF%";		
		
	// Rodapé
	public static final String RODAPE_BINARIO_LINHA25 = "49;89;49;49;48;48;48;48;50;49;50;48;49;50;52;103;102;120;48;";
	public static final String RODAPE_BINARIO_LINHA26 = "81;48;48;48;49;";
	public static final String RODAPE_BINARIO_LINHA27 = "69;";
	public static final String RODAPE_BINARIO_LINHA28 = "2;113;67;";
	
	private static boolean jobRunning = true;
		
	// Métodos que trabalham apenas com o conteúdo do arquivo...
	
	// Pegam a parte relacioanda ao layout da etiqueta de cada linha, convertem de decimal para char e concatenam com o conteúdo fornecido pelo usuário através do obejto Etiqueta. 
	
	private String getCodigoBarraLinha13(String codigoBarra) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA13_CODIGOBARRA.replace("%CodigoBarra%", "") ); 
		return layout + codigoBarra;
	}
	
	private String getDescricaoCodigoBarraLinha14(String descricaoCodigoBarra) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA14_DESCRICAOCODIGOBARRA.replace("%ValorCodigoBarra%", ""));
		return layout + descricaoCodigoBarra;
	}
	
	private String getCodigoBarraLinha15(String codigoBarra) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA15_CODIGOBARRA.replace("%CodigoBarra%", "") ); 
		return layout + codigoBarra;
	}
	
	private String getCodigoBarraLinha16(String codigoBarra) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA16_CODIGOBARRA.replace("%CodigoBarra%", "") ); 
		return layout + codigoBarra;
	}
		
	private String getCNPJLinha17(String cnpj) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA17_CNPJ.replace("%CNPJ%", "") );
		return layout + ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA17_CNPJ_MARGEM + "CNPJ" + cnpj;
	}	
		
	private String getArmazemLinha18(String armazem) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA18ARMAZEM.replace("%Armazem%", "") );
		return layout + armazem;
	}
	
	private String getEmbalagemPOLinha19(String embalagem, String po) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA19EMBALAGEMPO.replace("%EmbalagemPO%", "") );
		return layout + "EMB. "+embalagem+" - P.O. " + po;
	}
	
	private String getPesoLinha20(String peso) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA20PESO.replace("%Peso%", "") );
		return layout + "PESO. " + peso;
	}	
	
	private String getRemetenteLinha21(String remetente) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA21_REMETENTE.replace("%Remetente%", "") );
		return layout + remetente;
	}
	
	private String getUsuarioLinha22(String usuario) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA22USUARIO.replace("%Usuario%", "") );
		return layout + usuario + " - 21/12/2015 14:25i:38"; // TODO: verificar se a data é enviada pelo sistema ou é gerada na hora da impressão
	}

	private String getCodigoBarraLinha23(String codigoBarra) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA23CODIGOBARRA.replace("%CodigoBarra%", "") );
		return layout + codigoBarra;
	}
	
	private String getNotaFiscalLinha24(String notaFiscal) {
		String layout = ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CONTEUDO_BINARIO_LINHA24NF.replace("%NF%", "") );
		return layout + "NF " + notaFiscal + " - 1/12"; // TODO: Implementar regra para os Volumes
	}

	/**
	 *
	 * Método que faz a conversão de um valor decimal para char.
	 * @author Fabiano Góes
	 * @data 13/01/2016 
	 * @param value Valor do tipo decimal a ser convertido para char. 
	 * @return Um objeto String 
	 * 
	 */
	public static String converteDecimalToChar(String value) {
		String[] arrDecimal = value.split(";");
		String linhaConvertida = "";
		for (String decimal : arrDecimal) {
			int valInt = Integer.parseInt(decimal);
			linhaConvertida += (char) valInt;
		}
		return linhaConvertida;
	}
	
	/**
	 *
	 * Método que faz a conversão de um char para um valor decimal.
	 * @author Fabiano Góes
	 * @data 13/01/2016 
	 * @param value Valor do tipo char  a ser convertido para decimal. 
	 * @return Um objeto String  
	 * 
	 */
	public static String converteCharToDecimal(String value) {
		String linhaConvertida = "";
		for (char i : value.toCharArray()) {
			linhaConvertida += i + ";";
		}
		return linhaConvertida;
	}
		
	/**
	 * Método que faz a gravação de um arquivo.prn.
	 * @author Fabiano Góes
	 * @data 14/01/2016 
	 * @param etiqueta Um objeto do tipo Etiqueta. 
	 * @return void  
	 * 
	 */
	public void gravaArquivo( Etiqueta etiqueta ) {
		
		FileWriter arq;
		try {
			arq = new FileWriter( PATH_ETIQUETA );
			PrintWriter gravarArq = new PrintWriter(arq);
			
			// Cabeçalho
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA1 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA2 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA3 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA4 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA5 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA6 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA7 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA8 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA9 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA10 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA11 ) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar( ImpressaoEtiquetas.CABECALHO_BINARIO_LINHA12 ) );

			// Conteudo
			gravarArq.println( this.getCodigoBarraLinha13( etiqueta.getCodigoBarra() ) ); 
			gravarArq.println( this.getDescricaoCodigoBarraLinha14( etiqueta.getDescricaoCodigoBarra() ) ); 
			gravarArq.println( this.getCodigoBarraLinha15( etiqueta.getCodigoBarra() ) ); 
			gravarArq.println( this.getCodigoBarraLinha16( etiqueta.getCodigoBarra() ) ); 
			gravarArq.println( this.getCNPJLinha17( etiqueta.getCnpj() ) );
			gravarArq.println( this.getArmazemLinha18(etiqueta.getArmazem()) ); 
			gravarArq.println( this.getEmbalagemPOLinha19(etiqueta.getEmbalagem(), etiqueta.getPo()) );  
			gravarArq.println( this.getPesoLinha20(etiqueta.getPeso()) ); 
			gravarArq.println( this.getRemetenteLinha21(etiqueta.getRemetente()) ); 
			gravarArq.println( this.getUsuarioLinha22(etiqueta.getUsuario()) ); 
			gravarArq.println( this.getCodigoBarraLinha23(etiqueta.getCodigoBarra()) ); 
			gravarArq.println( this.getNotaFiscalLinha24(etiqueta.getNotaFiscal()));
							
			// Rodape
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar(ImpressaoEtiquetas.RODAPE_BINARIO_LINHA25) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar(ImpressaoEtiquetas.RODAPE_BINARIO_LINHA26) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar(ImpressaoEtiquetas.RODAPE_BINARIO_LINHA27) );
			gravarArq.println( ImpressaoEtiquetas.converteDecimalToChar(ImpressaoEtiquetas.RODAPE_BINARIO_LINHA28) );
			
			gravarArq.close();
			arq.close();
			
		} catch (IOException e) {
			e.printStackTrace();
			// TODO: gerar logs de Erro
		}		
	}
	
	/**
	 *
	 * Método que faz a leitura de um arquivo .prn e efetua a impressão na
	 * impressora padrão.
	 * @author Felipe Santaniello
	 * @data 14/01/2016 
	 * @param pathEtiqueta  caminho aonde se encontra o arquivo .prn localmente
	 * @return void
	 * @throws PrintException 
	 * @throws InterruptedException 
	 * @throws IOException 
	 * 
	 */
	public void imprimeEtiqueta(String pathEtiqueta) throws InterruptedException  {
		try {		
		    // Carregando o arquivo na memória 
			InputStream is = new BufferedInputStream(new FileInputStream(pathEtiqueta));
			// Cria um PNR doc flavor (Tipo de documento a ser impresso tal como: PDF,PNG,JPG e etc...)
			DocFlavor flavor = DocFlavor.INPUT_STREAM.AUTOSENSE;
			// Localiza a impressora padrão na máquina.
			PrintService service = PrintServiceLookup.lookupDefaultPrintService();
			// Cria e retorna um  PrintJob capaz de lidar com dados de qualquer um dos doc flavors.
			DocPrintJob printJob = service.createPrintJob();
			// Registra um  listener que pega a notificação quando o job estiver completo
			printJob.addPrintJobListener(new JobCompleteMonitor());
			// Constrói um SimpleDoc com o dado especificado (documento carregado na memória) e doc flavors.
			Doc doc = new SimpleDoc(is, flavor, null);
			// Imprime um documento com os atributos do job especificado.
			printJob.print(doc, null);
			is.close();
		}catch(PrintException pr) {
			pr.printStackTrace();			
		}catch(IOException io){
			io.printStackTrace();			
		}		
	}		
	
	/**
	 * @author Felipe Santaniello
	 * @data 14/01/2016
	 * @description Classe que sobrescreve os métodos de impressão da classe PrintJobAdapter.
	 *
	 */
	private static class JobCompleteMonitor extends PrintJobAdapter {
	   /**
		 * Método que vai monitorar se o job de impressão terminou de rodar.
		 * @author Felipe Santaniello
		 * @data 14/01/2016 
		 * @param jobEvent Evento da impressora 
		 * @return void
		 * 
		 */
		@Override
		public void printJobCompleted(PrintJobEvent jobEvent) {
			System.out.println("Job completed");
			jobRunning = false;
		}
	}	



	
}
